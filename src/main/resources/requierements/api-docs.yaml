openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /posts:
    post:
      tags:
      - posts
      summary: creating post and adding him to db
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post'
        "200":
          description: creating of post was done successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /mailings:
    post:
      tags:
      - mailings
      summary: creating mailing and adding him to db
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailingRegDto'
        required: true
      responses:
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Mailing'
        "200":
          description: creating of mailing was done successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mailing'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Mailing'
  /mailings/routing/{id}/to-int-post:
    patch:
      tags:
      - mailings
      summary: mailings come to intermediate post
      operationId: toIntPost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: 'mailings have successfully come to intermediate post '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routing'
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
  /mailings/routing/{id}/start:
    patch:
      tags:
      - mailings
      summary: mailings start from initial post
      operationId: start
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: starting of mailings from initial post was done successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routing'
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
  /mailings/routing/{id}/from-int-post:
    patch:
      tags:
      - mailings
      summary: mailings leave from intermediate post
      operationId: fromIntPost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "200":
          description: 'mailings have successfully left from intermediate post '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routing'
  /mailings/routing/{id}/finish:
    patch:
      tags:
      - mailings
      summary: mailings come to end point
      operationId: finish
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: 'mailings have successfully come to end point '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routing'
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
  /mailings/{id}:
    get:
      tags:
      - mailings
      summary: get info about mailing by id
      operationId: getInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MailingDto'
        "404":
          description: not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MailingDto'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MailingDto'
        "200":
          description: mailing has successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailingDto'
  /mailings/{id}/routing:
    get:
      tags:
      - mailings
      summary: find routing by id
      operationId: findRouting
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "404":
          description: not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "500":
          description: server trouble
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Routing'
        "200":
          description: routing has successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routing'
components:
  schemas:
    Post:
      type: object
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
    MailingRegDto:
      type: object
      properties:
        type:
          type: string
          enum:
          - LETTER
          - PACKAGE
          - PARCEL_POST
          - POSTCARD
        postIndexFrom:
          type: integer
          format: int32
        interPostIndex:
          type: integer
          format: int32
        postIndexTo:
          type: integer
          format: int32
        recipientName:
          type: string
        recipientAddress:
          type: string
        recipientIndex:
          type: integer
          format: int32
    Mailing:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - LETTER
          - PACKAGE
          - PARCEL_POST
          - POSTCARD
        recipient:
          $ref: '#/components/schemas/Recipient'
        status:
          type: string
          enum:
          - REGISTERED
          - SENT
          - ARRIVED
          - RECEIVED
        regDate:
          type: string
          format: date-time
        receivingDate:
          type: string
          format: date-time
    Recipient:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        index:
          type: integer
          format: int32
        mailing:
          $ref: '#/components/schemas/Mailing'
    Routing:
      type: object
      properties:
        id:
          type: integer
          format: int64
        postFrom:
          $ref: '#/components/schemas/Post'
        intermediatePost:
          $ref: '#/components/schemas/Post'
        postTo:
          $ref: '#/components/schemas/Post'
        start:
          type: string
          format: date-time
        departureTimeFromInterPost:
          type: string
          format: date-time
        arrivalTimeToInterPost:
          type: string
          format: date-time
        arrival:
          type: string
          format: date-time
    MailingDto:
      type: object
      properties:
        type:
          type: string
          enum:
          - LETTER
          - PACKAGE
          - PARCEL_POST
          - POSTCARD
        recipient:
          $ref: '#/components/schemas/Recipient'
        status:
          type: string
          enum:
          - REGISTERED
          - SENT
          - ARRIVED
          - RECEIVED
